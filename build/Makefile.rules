# -*- mode: makefile -*-
# Some general rules that can be used for building C files, etc.
#

DEPDIR := .deps
DEPFLAGS = -MT $@ -MMD -MP -MF $(DEPDIR)/$*.d

# Build C based object files.
%.o : %.c $(DEPDIR)/%.d | $(DEPDIR)
	@echo "  [CC]\t\t$@"
	@$(CC) $(DEPFLAGS) $(CFLAGS) $(INCLUDES) -c -o $@ $<

# Assemble object files.
%.o : %.S $(DEPDIR)/%.d | $(DEPDIR)
	@echo "  [AS]\t\t$@"
	@$(CC) $(DEPFLAGS) $(CFLAGS) $(INCLUDES) -c -o $@ $<

# Link an app using CC.
% : %.c $(OBJS)
	@echo "  [CC]\t\t$@"
	@$(CC) $(CFLAGS) -o $@ $(OBJS) $(LIBS)

# Link binary blobs; for free standing things.
%.bin : $(OBJS)
	@echo "  [LD]\t\t$@"
	@$(LD) $(LDFLAGS) -o $@ $(OBJS)

# Installation target for applications. It's a trivial copy.
install-app: $(APP)
	@if [ x$(APP) != x ]; then \
		echo "  [INSTALL]\t"$(APP) ; \
		cp $(APP) $(INSTALL); \
	fi

$(BIN): $(BIN).bin
	@$(OBJCOPY) -O binary $(BIN).bin $(BIN)

# Installation target for binaries; these go through objcopy
# first.
install-bin: $(BIN)
	@if [ x$(BIN) != x ]; then \
		echo "  [INSTALL]\t"$(BIN) ; \
		cp $(BIN) $(INSTALL)/$(BIN) ; \
	fi

install: install-app install-bin

# Clean target to wipe out all built files.
clean:
	@rm -rf $(OBJS) $(BIN) $(APP) $(BIN).bin .deps
	@rm -rf $(EXTRA_CLEAN)

all: $(APP) $(BIN)
	@echo >/dev/null

.PRECIOUS: $(OBJS)

$(DEPDIR):
	@mkdir -p $@

DEPFILES += $(OBJS:%.o=$(DEPDIR)/%.d)
$(DEPFILES):

include $(wildcard $(DEPFILES))
